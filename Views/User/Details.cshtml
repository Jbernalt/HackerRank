@model HackerRank.ViewModels.UserViewModel
@using Microsoft.AspNetCore.Identity
@using HackerRank.Models.Users;
@inject SignInManager<User> SignInManager
<h1>Profile page</h1>

@if (SignInManager.IsSignedIn(User))
{
    <li class="page-link">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Edit your profile</a>
    </li>
}

<div>
    <hr />
    <br />
    <dl class="col">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Username)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Username)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayName("Date created")
        </dt>
        <dd class="col-sm-10">
            @string.Format("{0:dd/MM/yyyy}", Model.DateCreated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Groups)
        </dt>
        @foreach (var item in Model.Groups)
        {
            <dd class="col-sm-10">
                @item.GroupName
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Projects)
        </dt>
        @foreach (var item in Model.Projects)
        {
            <dd class="col-sm-10">
                @item.ProjectName
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayName("Achievements")
        </dt>
        @foreach (var item in Model.UserAchievements)
        {
            <dd class="col-sm-10">
                @item.Achievement.AchievementName
            </dd>
            <dd class="col-sm-10">
                @item.Achievement.Description
            </dd>

            <dd><img src="~/achievementImg/@item.Achievement.Image" asp-append-version="true" style="max-width:25%" /></dd>
        }
    </dl>

    @*@using (Html.BeginForm("HandleButtonClick", "UserController"))
        {
            <button type="submit" name="submit" value="commit"> Commits</button>
            <button type="submit" name="submit" value="issuesCreated"> IssuesCreated</button>
            <button type="submit" name="submit" value="issuesSolved"> IssuesSolved</button>
            <button type="submit" name="submit" value="mergeRequest"> MergeRequests</button>
            <button type="submit" name="submit" value="comments"> Comments</button>
        }*@

    <input type="button" id="sales" value="Commit" />
    <input type="button" id="expenses" value="IssuesCreated" />
    <input type="button" id="revenue" value="IssuesSolved" />

    <div id="chart_div"></div>

    <div id="line_chart" style="width: 900px; height: 500px"></div>
    @section Scripts
    {
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script type="text/javascript">
            google.charts.load('current', {
              'callback': function () {
                var data = google.visualization.arrayToDataTable([
                        ['Time', 'Data'],

                        @foreach (var data in Model.ChartDatas)
                        {
                            <text>['@data.TimeStamp', @data.NumOfCommits],</text>
                        }
                    ]);

                var data2 = google.visualization.arrayToDataTable([
                        ['Time', 'Data2'],

                        @foreach (var data in Model.ChartDatas)
                        {
                            <text>['@data.TimeStamp', @data.NumOfIssuesCreated],</text>
                        }
                    ]);

                var data3 = google.visualization.arrayToDataTable([
                        ['Time', 'Data3'],

                        @foreach (var data in Model.ChartDatas)
                        {
                            <text>['@data.TimeStamp', @data.NumOfIssuesSolved],</text>
                        }
                    ]);

                var options =
                {
                    title: 'User commits',
                    curveType: 'function',
                    pointsVisible: true,
                    lineWidth: 3,
                    hAxis: { title: 'Time' },
                    vAxis: { title: 'Commits' },
                    width: 500,
                    height: 500
                };

                    var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
                    chart.draw(data, options);

                document.getElementById('Data').addEventListener('click', function () {
                    chart.draw(data, options);
                }, false);

                document.getElementById('Data2').addEventListener('click', function () {
                    chart.draw(data2, options);
                }, false);

                document.getElementById('Data3').addEventListener('click', function () {
                  chart.draw(data3, options);
                }, false);
              },
              'packages':['corechart']
            });
        </script>
    }



    @*<div id="line_chart" style="width: 900px; height: 500px"></div>
        @section Scripts
        {
            <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
            <script type="text/javascript">
            google.charts.load('current', { packages: ['corechart'] });
            google.charts.setOnLoadCallback(drawChart);
                function drawChart()
                {
                    var data = google.visualization.arrayToDataTable([
                        ['Time', 'Data'],

                        @foreach (var data in Model.ChartDatas)
                        {
                            <text>['@data.TimeStamp', @data.NumOfCommits],</text>
                        }
                    ]);

                    var options =
                    {
                        title: 'User commits',
                        curveType: 'function',
                        pointsVisible: true,
                        lineWidth: 3,
                        hAxis: { title: 'Time' },
                        vAxis: { title: 'Commits' },
                        width: 500,
                        height: 500
                    };

                    var chart = new google.visualization.LineChart(document.getElementById('line_chart'));
                    chart.draw(data, options);
                }
            </script>
        }*@
</div>