@model HackerRank.ViewModels.UserViewModel
@using Microsoft.AspNetCore.Identity
@using HackerRank.Models.Users;
@inject SignInManager<User> SignInManager
<h1>Profile page</h1>

@if (SignInManager.IsSignedIn(User))
{
    <li class="page-link">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Edit your profile</a>
    </li>
}

<div>
    <hr />
    <img src="~/profileImg/@Model.ProfileImage"
         asp-append-version="true" style="max-width:25%" />
    <br />
    <dl class="col">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Username)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Username)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayName("Date created")
        </dt>
        <dd class="col-sm-10">
            @string.Format("{0:dd/MM/yyyy}", Model.DateCreated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Groups)
        </dt>
        @foreach (var item in Model.Groups)
        {
            <dd class="col-sm-10">
                @item.GroupName
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Projects)
        </dt>
        @foreach (var item in Model.Projects)
        {
            <dd class="col-sm-10">
                @item.ProjectName
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayName("Achievements")
        </dt>
        @foreach (var item in Model.UserAchievements.Where(i => i.IsShowCase == true))
        {
            <dd class="col-sm-10">
                @item.Achievement.AchievementName
            </dd>
            <dd class="col-sm-10">
                @item.Achievement.Description
            </dd>

            <dd><img src="~/achievementImg/@item.Achievement.Image" asp-append-version="true" style="max-width:25%" /></dd>
        }
    </dl>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    @*Buttons to Change Charts*@
    <div class="Chart-Buttons">
        <input type="button" id="commit" value="Commit" class="btn btn-primary" />
        <input type="button" id="issuesCreated" value="Issues created" class="btn btn-primary" />
        <input type="button" id="issuesSolved" value="Issues solved" class="btn btn-primary" />
        <input type="button" id="mergeRequests" value="Merge requests" class="btn btn-primary" />
        <input type="button" id="comments" value="Comments" class="btn btn-primary" />
    </div>

    <div id="chart_div"></div>

    @*Buttons to Change TimeSpan on Charts*@
    <div class="Chart-Buttons-TimeSpan">
        <input type="button" id="day" value="Day" class="btn btn-primary" />
        <input type="button" id="week" value="Week" class="btn btn-primary" />
        <input type="button" id="month" value="Month" class="btn btn-primary" />
        <input type="button" id="year" value="Year" class="btn btn-primary" />
        <input type="button" id="allTime" value="AllTime" class="btn btn-primary" />
    </div>

    @section Scripts
    {
        <script type="text/javascript">
            google.charts.load('current', {'packages':['corechart']});
            google.charts.setOnLoadCallback(drawChart);

            function drawChart()
            {
                var data = google.visualization.arrayToDataTable([
                    ['Time', 'Commit'],

                    @foreach (var data in Model.ChartDatas)
                    {
                        <text>[new Date('@data.TimeStamp'), @data.NumOfCommits],</text>
                    }
                ]);

                var data2 = google.visualization.arrayToDataTable([
                    ['Time', 'IssuesCreated'],

                    @foreach (var data in Model.ChartDatas)
                    {
                        <text>[new Date('@data.TimeStamp'), @data.NumOfIssuesCreated],</text>
                    }
                ]);

                var data3 = google.visualization.arrayToDataTable([
                    ['Time', 'IssuesSolved'],

                    @foreach (var data in Model.ChartDatas)
                    {
                        <text>[new Date('@data.TimeStamp'), @data.NumOfIssuesSolved],</text>
                    }
                ]);

                var data4 = google.visualization.arrayToDataTable([
                    ['Time', 'MergeRequests'],

                    @foreach (var data in Model.ChartDatas)
                    {
                        <text>[new Date('@data.TimeStamp'), @data.NumOfMergeRequests],</text>
                    }
                ]);

                var data5 = google.visualization.arrayToDataTable([
                    ['Time', 'Comments'],

                    @foreach (var data in Model.ChartDatas)
                    {
                        <text>[new Date('@data.TimeStamp'), @data.NumOfComments],</text>
                    }
                ]);

                var d = new Date();
                var month = d.getMonth(); // From 0-11
                var year = d.getFullYear(); // Get year
                var day = d.getDate(); // From 1-31

                var options =
                {
                    title: 'User Commits',
                    curveType: 'function',
                    width: 800,
                    height: 400,
                    hAxis: {
                        title: 'Time',
                        format: 'yyyy/MM/dd',
                    },
                    vAxis: {
                        title: 'Commits',
                        format: ''
                    }
                };

                var chart = new google.visualization.LineChart(document.getElementById('chart_div'));

                chart.draw(data, options);

                //#region Listens for button click to change TimeSpan
                document.getElementById('day').addEventListener('click', function () {
                    options.hAxis.viewWindow.min = (year, month, day - 1);
                    options.hAxis.viewWindow.max = (year, month, day);
                    chart.draw(data, options);
                }, false);

                document.getElementById('week').addEventListener('click', function () {
                    options.hAxis.viewWindow.min = (year, month, day - 7);
                    options.hAxis.viewWindow.max = (year, month, day);
                    chart.draw(data, options);
                }, false);

                document.getElementById('month').addEventListener('click', function () {
                    options.hAxis.viewWindow.min = (year, month - 1, day);
                    options.hAxis.viewWindow.max = (year, month, day);
                    chart.draw(data, options);
                }, false);

                document.getElementById('year').addEventListener('click', function () {
                    options.hAxis.viewWindow.min = (year - 1, month, day);
                    options.hAxis.viewWindow.max = (year, month, day);
                    chart.draw(data, options);
                }, false);
                //#endregion

                //#region Listens for button click to change options and Data
                document.getElementById('commit').addEventListener('click', function () {
                    options.title = 'User Commits';
                    options.vAxis.title = 'Commits';
                    chart.draw(data, options);
                }, false);

                document.getElementById('issuesCreated').addEventListener('click', function () {
                    options.title = 'User IssuesCreated';
                    options.vAxis.title = 'IssuesCreated';
                    chart.draw(data2, options);
                }, false);

                document.getElementById('issuesSolved').addEventListener('click', function () {
                    options.title = 'User IssuesSolved';
                    options.vAxis.title = 'IssuesSolved';
                    chart.draw(data3, options);
                }, false);

                document.getElementById('mergeRequests').addEventListener('click', function () {
                    options.title = 'User MergeRequests';
                    options.vAxis.title = 'MergeRequests';
                    chart.draw(data4, options);
                }, false);

                document.getElementById('comments').addEventListener('click', function () {
                    options.title = 'User Comments';
                    options.vAxis.title = 'Comments';
                    chart.draw(data5, options);
                }, false);
                //#endregion
            }
        </script>
    }
</div>